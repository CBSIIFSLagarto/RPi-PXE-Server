#Generated by Kickstart Configurator
#platform=x86

# HTTP Proxy: http://192.168.1.3:3142/

# Load the minimal server preseed off cdrom
# preseed preseed/file string /cdrom/preseed/ubuntu-server-minimal.seed

#System language
lang pt_BR
#Language modules to install
langsupport pt_BR
#System keyboard
keyboard br_nativo
#System mouse
mouse
#System timezone
timezone America/Bahia
#Root password
rootpw --iscrypted $1$oyEi7H9.$zjp/ZBPJWFBPeEnbQgeH8.
#Initial user
user projetokube --fullname "ProjetoKube" --iscrypted --password $1$iSuxu0eH$QOrRISU8tFmNziRG.hkwl.
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
# cdrom
nfs --server=192.168.1.3 --dir=/nfs/ubuntu-server-64/

#Change console size to 1024x768x24
# preseed debian-installer/add-kernel-opts string "vga=792"

# Ver https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=740271
# d-i partman/early_command string sh -c 'set -- $(vgs --rows --noheadings | head -n 1); for vg in "$@"; do swapoff "/dev/$vg/swap"; vgremove -f "$vg"; done; set -- $(pvs --rows --noheadings | head -n 1); for pv in "$@"; do pvremove -f "$pv"; done'
# preseed partman/early_command string sh -c 'set -- $(vgs --rows --noheadings | head -n 1); for vg in "$@"; do swapoff "/dev/$vg/swap"; vgremove -f "$vg"; done; set -- $(pvs --rows --noheadings | head -n 1); for pv in "$@"; do pvremove -f "$pv"; done'


# d-i partman-auto/disk string /dev/sda
# d-i partman-auto/method string lvm
# d-i partman-auto-lvm/guided_size string max
# d-i partman-lvm/device_remove_lvm boolean true
# d-i partman-lvm/confirm boolean true
# d-i partman-md/device_remove_md boolean true

# d-i partman/confirm_write_new_label boolean true

# - atomic: all files in one partition
# d-i partman-auto/choose_recipe select atomic
# d-i partman/default_filesystem string ext3
# d-i partman/confirm_write_new_label boolean true
# d-i partman/confirm boolean true
# d-i partman/confirm_nooverwrite boolean true 

preseed partman-lvm/confirm_nooverwrite boolean true
preseed partman-lvm/device_remove_lvm boolean true

preseed partman/confirm_write_new_label boolean true
preseed partman/confirm boolean true
preseed partman/confirm_nooverwrite boolean true


# d-i partman/choose_partition 


#System bootloader configuration
bootloader --location=mbr 
#Clear the Master Boot Record
zerombr yes 

# preseed partman/confirm boolean true

#Partition clearing information
clearpart --all # --initlabel
# select Finish partitioning and write changes to disk
preseed partman/confirm boolean true


#Disk partitioning information
# part / --fstype ext4 --size 2048
part /boot --fstype ext4 --size 2048 
part swap --size 4096
part / --fstype ext4 --size 1 --grow


# Ver https://wiki.ubuntu.com/Enterprise/WorkstationAutoinstallPreseed
# preseed partman-auto/disk /dev/sda
# d-i partman-auto/method string lvm

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
# d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
# d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
# d-i partman-lvm/confirm boolean true
# d-i partman-lvm/confirm_nooverwrite boolean true


preseed partman-auto/disk /dev/sda 
# d-i partman-auto/disk /dev/sda2 
# d-i partman-auto/disk /dev/sda3
# preseed partman-auto/method string lvm
pressed partman-lvm/device_remove_lvm boolean true
pressed partman-md/device_remove_md boolean true
pressed partman-lvm/confirm boolean true
# pressed partman-lvm/confirm_nooverwrite boolean true
# pressed partman-auto-lvm/new_vg_name string rootvg
# pressed partman-auto-lvm/new_vg_name string infravg
# pressed partman-auto/choose_recipe select diod
# pressed partman-auto/expert_recipe diod :: \

# d-i partman/default_filesystem string ext4

# pressed partman/confirm_write_new_label boolean true
# pressed partman/choose_partition select finish
# pressed partman/confirm boolean true
# pressed partman/confirm_nooverwrite boolean true


#System authorization infomation
auth  --useshadow  --enablemd5 
#Firewall configuration
firewall --disabled 
#Do not configure the X Window System
# skipx
#Package install information
%packages
openssh-server
ftp
build-essential
ansible
%post
echo 'Projeto Kube - Ubuntu Server 16-04' > /etc/issue
sed -i 's,Welcome to,Seja bem-vindo,g' /etc/update-motd.d/00-header
echo 'printf "\n* O Projeto Kube nasceu em meados de 2015\n* Hoje tem seu foco expandido e busca atacar os assuntos de cloud computing e Devops\n"' >> /etc/update-motd.d/00-header
echo '#!/bin/sh' > /etc/update-motd.d/10-help-text
echo 'printf "\n"' >> /etc/update-motd.d/10-help-text
echo 'printf " * Site do projeto:  https://projetokube.github.io\n"' >> /etc/update-motd.d/10-help-text
echo 'printf " * Suporte do ubuntu:  https://ubuntu.com/advantage\n"' >> /etc/update-motd.d/10-help-text
git clone https://github.com/reinanhs/projetokube-silence.git
mkdir -p projetokube-silence /boot/grub/themes/projetokube-silence
cp -a projetokube-silence /boot/grub/themes/
echo 'GRUB_THEME="/boot/grub/themes/projetokube-silence/theme/theme.txt"' >> /etc/default/grub
sed -i 's,GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`,GRUB_DISTRIBUTOR="Projetokube",g' /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg
rm -rf projetokube-silence/
wget https://raw.githubusercontent.com/franciscojsc/scripts-install-kubernetes/master/ubuntu/master.sh
chmod +x master.sh
bash ./master.sh
